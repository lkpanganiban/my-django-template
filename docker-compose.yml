version: '3.7'

services:
  app_1:
    container_name: app1
    build:
      context: ./django
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./django:/usr/src/app/
      - log_data:/var/log/django-app
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./.env.dev
    depends_on:
      - app_db
      - redis_db
  app_1_worker:
    build: ./django
    container_name: app1worker
    command: celery -A django_app worker --loglevel=INFO
    depends_on:
      - app_1
      - redis_db
    env_file:
      - ./.env.dev
    volumes:
      - ./django/:/usr/src/app/
  redis_db:
    container_name: redis_db
    image: "redis:alpine"
    volumes:
      - redis_data:/data
  app_db:
    container_name: app_db
    image: postgres:13.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env-db.dev
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    ports:
      - "9090:9090"

  elasticsearch:
    build:
      context: docker-elk/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./docker-elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
    build:
      context: docker-elk/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./docker-elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,z
      - ./docker-elk/logstash/pipeline:/usr/share/logstash/pipeline:ro,z
      - log_data:/logs:ro
    ports:
      - "5044:5044"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: docker-elk/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./docker-elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,z
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  redis_data:
  log_data:
  elasticsearch:
